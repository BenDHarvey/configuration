# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="robbyrussell"

ZSH_DISABLE_COMPFIX=true

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    git
    history-substring-search
    colored-man-pages
)

source $ZSH/oh-my-zsh.sh

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='emacs -nw'
fi

#############
## ALIASES ##
#############
alias gs="git status"
alias gl="git log --decorate --graph"
alias gd="git diff"
alias vim="nvim"
alias dbu="docker-compose down && docker-compose build && docker-compose up"
alias emacs="emacs -nw"
alias cl="clear"
alias ls="ls -las"

#Nuke all the docker things
dockerNuke () {
  docker stop $(docker ps -a -q)
  docker system prune -a -f
}

postgresUp () {
  docker run --name switchdin-postgres \
    -e POSTGRES_PASSWORD=postgres \
    -e POSTGRES_USER=postgres \
    -e POSTGRES_DB=switchdin \
    -p "5432:5432" \
    -d postgres
}

# Removes node_modules folder and package-lock.json reinstalls node_modules
node-reinstall() {
  echo "Removing node_modules...."
  sudo rm -r node_modules
  echo "Removing package-lock.json"
  sudo rm package-lock.json
  echo "Installing node_modules"
  npm i
}

jwtDecode () {
  sed 's/\./\n/g' <<< $(cut -d. -f1,2 <<< $1) | base64 --decode | jq
}

updateConfig() {
  ansible-playbook ~/.configuration/endpoints/workstation.yml
}

function killByPort {
  if [ "$1" != "" ]
  then
    kill -9 $(lsof -ni tcp:"$1" | awk 'FNR==2{print $2}')
  else
    echo "Missing argument! Usage: kill-by-port $PORT"
  fi
}

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

GPG_TTY=$(tty)
export GPG_TTY
